# .circleci/config.yml
version: 2
jobs:

  build:
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Create Docker Compose configuration file
          command: |
            echo "POSTGRES_USER=postgres" >> ./.env
            echo "POSTGRES_PASSWORD=password" >> ./.env
            echo "DATABASE_URL=postgres://postgres:password@db:5432/data_quality" >> ./.env
            echo "GRAPHQL_URL=http://graphql:5433/graphql" >> ./.env
            echo "MAIL_HOST=smtp.server.org" >> ./.env
            echo "MAIL_PORT=25" >> ./.env
            echo "MAIL_SENDER=change@me.com" >> ./.env
            echo "NODE_ENV=development" >> ./.env
            echo "REACT_APP_GRAPHQL_API_URL=http://0.0.0.0:5433/graphql" >> ./.env

      - run:
          name: Build Docker images
          command: |
            docker-compose -f docker-compose.yml -f docker-compose.test.yml build db graphql api app scripts
            docker-compose -f ./test/docker-compose.yml build
            docker images

      - run:
          name: Run Docker containers
          command: |
            docker network create mobydq-network
            docker volume create mobydq-db-volume
            docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d db graphql api
            docker ps -a

      - run:
          name: Run backend tests
          command: |
            docker-compose -f ./test/docker-compose.yml up -d

      - run:
          name: Run frontend tests
          command: |
            docker exec -it mobydq-app npm test -- --coverage

      - run:
          name: Run tests
          command: |
            echo 'export PYTHONPATH=./test:$PYTHONPATH' >> $BASH_ENV
            echo 'export PYTHONPATH=./api/init:$PYTHONPATH' >> $BASH_ENV
            echo 'export PYTHONPATH=./scripts/init:$PYTHONPATH' >> $BASH_ENV
            source $BASH_ENV
            nose2 --plugin nose2.plugins.junitxml --junit-xml -v

      - store_artifacts:
          path: test/junit/test-results.xml
          destination: test-results

      - store_test_results:
          path: test
